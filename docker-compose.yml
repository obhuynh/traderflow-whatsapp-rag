version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/code/app
      # Ensure this line is exactly correct based on the CONTAINER'S internal path
      - chroma_embedding_cache:/root/.cache/chroma
      - whisper_model_cache:/root/.cache/faster-whisper
    env_file:
      - .env
    depends_on:
      - chroma
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1 # Use all available NVIDIA GPUs
              # You can also use 'count: 1' to just use one GPU
              capabilities: [gpu]

  chroma:
    image: chromadb/chroma
    ports:
      - "8002:8000"
    volumes:
      - chroma_data:/chroma/.chroma/index

  ngrok: # <--- NEW NGROK SERVICE DEFINITION
    image: ngrok/ngrok:latest # Use the official Ngrok Docker image
    restart: unless-stopped # Automatically restart Ngrok if it crashes
    ports:
      - "4040:4040" # Exposes Ngrok's local web interface (optional, but useful for debugging)
    environment:
      # Pass the auth token from your .env file into the Ngrok container
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    command:
      # This command tells Ngrok to create an HTTP tunnel to the 'api' service (within Docker network) on port 8000.
      "http api:8000"
    depends_on:
      - api # Ensure the 'api' service is running before Ngrok attempts to tunnel to it.

volumes:
  chroma_data:
  chroma_embedding_cache: 
  whisper_model_cache: